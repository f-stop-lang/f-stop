
?start: statement*



statement: "OPEN"i string "AS"i NAME -> open_stmt
        |"RESIZE"i NAME ntuple -> resize_stmt
        |"INVERT"i NAME -> invert_stmt
        |"SOLARIZE"i NAME NUMBER? -> solarize_stmt
        |"CROP"i NAME ntuple -> crop_stmt
        |"POSTERIZE"i NAME INTEGER -> posterize_stmt
        | "FLIP"i NAME -> flip_stmt
        | "GRAYSCALE"i NAME -> grayscale_stmt
        | "ARC"i NAME ntuple NUMBER NUMBER color? INTEGER? -> arc_stmt
        | "RECTANGLE"i NAME ntuple color? color? INTEGER? -> rectangle_stmt
        | "LINE"i NAME ntuple color? INTEGER? -> line_stmt
        | "TEXT"i NAME ntuple string font? color? -> text_stmt
        | "BLEND"i NAME NAME NUMBER "AS"i NAME -> blend_stmt
        | "CONVERT"i NAME string -> convert_stmt
        | "OPEN"i "URL"i string "AS"i NAME -> url_stmt
        | "ELLIPSE" NAME ntuple color? color? INTEGER? -> ellipse_stmt
        | "SAVE" NAME string -> save_stmt
        | "CLOSE" NAME -> close_stmt
        | "ITER" NAME "AS" NAME "{" statement* "}" -> iter_stmt
        | "NEW" string ntuple  "AS" NAME -> new_stmt_no_color
        | "NEW" string ntuple color "AS" NAME -> new_stmt
string: /("[^"\\]*(\\.[^"\\]*)*"|'[^'\\]*(\\.[^'\\]*)*')/
integer: /-?\d+/
ntuple: "(" (NUMBER ",")* NUMBER ")"
color_tuple: "COLOR"i ntuple
color_int: "COLOR"i INTEGER
color_string: "COLOR"i string
?color: color_tuple | color_int | color_string
font: "FONT" "(" string "," INTEGER? ")"
%import common.WS
%ignore WS
%import common.WS_INLINE
%ignore WS_INLINE
%import common.CNAME -> NAME
%import common.NEWLINE -> NEWLINE
%import common.CPP_COMMENT -> SINGLE_COMMENT
%import common.C_COMMENT -> MULTILINE_COMMENT
%ignore MULTILINE_COMMENT
%ignore SINGLE_COMMENT
%ignore NEWLINE
%import common.SIGNED_NUMBER -> NUMBER
%import common.INT -> INTEGER

